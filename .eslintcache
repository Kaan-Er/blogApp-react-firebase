[{"E:\\VisualStudioCode\\React\\blogApp\\src\\index.js":"1","E:\\VisualStudioCode\\React\\blogApp\\src\\components\\NotFoundPage.js":"2","E:\\VisualStudioCode\\React\\blogApp\\src\\components\\AddBlogPage.js":"3","E:\\VisualStudioCode\\React\\blogApp\\src\\components\\HomePage.js":"4","E:\\VisualStudioCode\\React\\blogApp\\src\\components\\EditBlogPage.js":"5","E:\\VisualStudioCode\\React\\blogApp\\src\\components\\BlogDetailsPage.js":"6","E:\\VisualStudioCode\\React\\blogApp\\src\\components\\ContactPage.js":"7","E:\\VisualStudioCode\\React\\blogApp\\src\\routers\\PublicRoute.js":"8"},{"size":2384,"mtime":1610464161891,"results":"9","hashOfConfig":"10"},{"size":127,"mtime":1609529494109,"results":"11","hashOfConfig":"10"},{"size":852,"mtime":1610367938032,"results":"12","hashOfConfig":"10"},{"size":247,"mtime":1610446337002,"results":"13","hashOfConfig":"10"},{"size":1341,"mtime":1609879322750,"results":"14","hashOfConfig":"10"},{"size":455,"mtime":1609626421197,"results":"15","hashOfConfig":"10"},{"size":129,"mtime":1609529494108,"results":"16","hashOfConfig":"10"},{"size":489,"mtime":1610449586335,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1pzegw6",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\VisualStudioCode\\React\\blogApp\\src\\index.js",["36","37","38","39","40","41"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport AppRouter, { history } from \"./routers/AppRouter\";\r\nimport configureStore from \"./store/configureStore\";\r\nimport { getBlogsFromDatabase, clearBlogs } from \"./actions/blogs\";\r\nimport { getRolesFromDatabase } from \"./actions/roles\";\r\nimport { firebase } from \"./firebase/firebaseConfig\";\r\nimport { loginAction, logoutAction } from \"./actions/auth\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"./style.css\";\r\nimport {\r\n  addBlogCategoryToDatabase,\r\n  clearCategories,\r\n  getCategoriesFromDatabase,\r\n} from \"./actions/categories\";\r\nimport {\r\n  addAdminToDatabase,\r\n  clearAdmins,\r\n  getAdminsFromDatabase,\r\n} from \"./actions/admins\";\r\nimport {\r\n  addCommentToDatabase,\r\n  clearComments,\r\n  getCommentsFromDatabase,\r\n} from \"./actions/comments\";\r\n\r\nconst store = configureStore();\r\n\r\nconst result = (\r\n  <Provider store={store}>\r\n    <AppRouter />\r\n  </Provider>\r\n);\r\n\r\nlet isRendered = false;\r\n\r\nconst renderApp = () => {\r\n  if (!isRendered) {\r\n    ReactDOM.render(result, document.getElementById(\"root\"));\r\n    isRendered = true;\r\n  }\r\n};\r\n\r\nstore.dispatch(getRolesFromDatabase());\r\n\r\nstore.dispatch(getCategoriesFromDatabase());\r\n\r\nstore.dispatch(getBlogsFromDatabase()).then(() => {\r\n  renderApp();\r\n});\r\n\r\nstore.dispatch(getCommentsFromDatabase());\r\n\r\n// store.dispatch(addAdminToDatabase(\"8M7uAYX9m4VdiFxP2njt7FOGnvG3\")); // Add the new admin\r\n\r\nstore.dispatch(getAdminsFromDatabase());\r\n\r\n// store.dispatch(\r\n//   addBlogCategoryToDatabase({\r\n//     categoryName: \"Other\",\r\n//     categoryPath: \"other\",\r\n//   })\r\n// );\r\n\r\nfirebase.auth().onAuthStateChanged(function (user) {\r\n  if (user) {\r\n    // console.log(user.uid);\r\n    store.dispatch(loginAction(user));\r\n    store.dispatch().then(() => {\r\n      renderApp();\r\n      if (history.location.pathname === \"/\") {\r\n        return history.push(\"/blogs\");\r\n      }\r\n    });\r\n  } else {\r\n    store.dispatch(logoutAction());\r\n    // store.dispatch(clearBlogs());\r\n    // store.dispatch(clearCategories());\r\n    store.dispatch(clearAdmins());\r\n    // store.dispatch(clearComments());\r\n    renderApp();\r\n    history.push(\"/\");\r\n  }\r\n});\r\n\r\nreportWebVitals();\r\n",["42","43"],"E:\\VisualStudioCode\\React\\blogApp\\src\\components\\NotFoundPage.js",[],"E:\\VisualStudioCode\\React\\blogApp\\src\\components\\AddBlogPage.js",[],"E:\\VisualStudioCode\\React\\blogApp\\src\\components\\HomePage.js",[],"E:\\VisualStudioCode\\React\\blogApp\\src\\components\\EditBlogPage.js",[],"E:\\VisualStudioCode\\React\\blogApp\\src\\components\\BlogDetailsPage.js",[],"E:\\VisualStudioCode\\React\\blogApp\\src\\components\\ContactPage.js",[],"E:\\VisualStudioCode\\React\\blogApp\\src\\routers\\PublicRoute.js",[],{"ruleId":"44","severity":1,"message":"45","line":7,"column":32,"nodeType":"46","messageId":"47","endLine":7,"endColumn":42},{"ruleId":"44","severity":1,"message":"48","line":16,"column":3,"nodeType":"46","messageId":"47","endLine":16,"endColumn":28},{"ruleId":"44","severity":1,"message":"49","line":17,"column":3,"nodeType":"46","messageId":"47","endLine":17,"endColumn":18},{"ruleId":"44","severity":1,"message":"50","line":21,"column":3,"nodeType":"46","messageId":"47","endLine":21,"endColumn":21},{"ruleId":"44","severity":1,"message":"51","line":26,"column":3,"nodeType":"46","messageId":"47","endLine":26,"endColumn":23},{"ruleId":"44","severity":1,"message":"52","line":27,"column":3,"nodeType":"46","messageId":"47","endLine":27,"endColumn":16},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},"no-unused-vars","'clearBlogs' is defined but never used.","Identifier","unusedVar","'addBlogCategoryToDatabase' is defined but never used.","'clearCategories' is defined but never used.","'addAdminToDatabase' is defined but never used.","'addCommentToDatabase' is defined but never used.","'clearComments' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-global-assign","no-unsafe-negation"]